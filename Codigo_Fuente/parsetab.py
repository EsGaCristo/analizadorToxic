
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND BGN CALL CBRT CHR CKEY CM COMMENT CPRT DIF DIV DO ELSE END ENDL ENDST EQL EQL_DIV EQL_MULT EQL_SUB EQL_SUM FLT GRT GRTE IDF IF INT MULT NOT OBRT OKEY OPRT OR PCD SML SMLE STR SUBST WHLprogram : blockblock : declaracion\n             | While\n             | condicionaldeclaracion : emptydeclaracion : asignacion ENDSTasignacion : IDF EQL expresionasignacion : asignacion ENDST IDF EQL expresion ENDSTWhile : WHL OPRT expresion CPRT OKEY expresion CKEYexpresion : INTexpresion : CHRcondicional : OPRT expresion CPRT OKEY expresion CKEYcondicional : OPRT expresion CPRT OKEY declaracion CKEYcondicional : OPRT expresion CPRT OKEY empty CKEYempty :\n    expresion  :   expresion ADD expresion\n                |   expresion SUBST expresion\n                |   expresion MULT expresion\n                |   expresion DIV expresion\n    \n    expresion   :  expresion SML expresion\n                |  expresion GRT expresion\n                |  expresion SMLE expresion\n                |   expresion GRTE expresion\n                |   expresion EQL expresion\n                |   expresion DIF expresion\n                |  IDF SML IDF\n                |  IDF GRT IDF\n                |  IDF SMLE IDF\n                |   IDF GRTE IDF\n                |   IDF EQL IDF\n                |   IDF DIF IDF\n                |  OPRT expresion CPRT SML OPRT expresion CPRT\n                |  OPRT expresion CPRT GRT OPRT expresion CPRT\n                |  OPRT expresion CPRT SMLE OPRT expresion CPRT\n                |  OPRT  expresion CPRT GRTE OPRT expresion CPRT\n                |  OPRT  expresion CPRT EQL OPRT expresion CPRT\n                |  OPRT  expresion CPRT DIF OPRT expresion CPRT\n    \n    expresion   :   expresion AND expresion\n                |   expresion OR expresion\n                |   expresion NOT expresion\n                |  OPRT expresion AND expresion CPRT\n                |  OPRT expresion OR expresion CPRT\n                |  OPRT expresion NOT expresion CPRT\n    '
    
_lr_action_items = {'WHL':([0,],[8,]),'OPRT':([0,8,9,12,13,18,23,24,25,26,27,28,29,30,31,32,33,34,35,43,46,47,48,49,70,71,72,73,74,75,76,86,87,88,89,90,91,98,],[9,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,86,87,88,89,90,91,13,13,13,13,13,13,13,]),'$end':([0,1,2,3,4,5,6,11,95,96,97,99,],[-15,0,-1,-2,-3,-4,-5,-6,-12,-13,-14,-9,]),'IDF':([0,9,11,12,13,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,46,47,48,49,70,86,87,88,89,90,91,98,],[10,17,19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,63,64,65,66,67,68,17,17,17,17,83,17,17,17,17,17,17,17,106,]),'ENDST':([7,15,16,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,84,92,93,94,107,108,109,110,111,112,],[11,-10,-11,-7,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-38,-39,-40,-26,-27,-28,-29,-30,-31,84,-8,-41,-42,-43,-32,-33,-34,-35,-36,-37,]),'INT':([9,12,13,18,23,24,25,26,27,28,29,30,31,32,33,34,35,43,46,47,48,49,70,86,87,88,89,90,91,98,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CHR':([9,12,13,18,23,24,25,26,27,28,29,30,31,32,33,34,35,43,46,47,48,49,70,86,87,88,89,90,91,98,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'EQL':([10,14,15,16,17,19,20,21,42,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,83,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[18,31,-10,-11,40,43,31,31,31,75,31,31,31,31,31,31,31,31,31,31,31,31,31,-26,-27,-28,-29,-30,-31,31,31,31,31,31,98,31,-41,-42,-43,31,31,31,31,31,31,40,-32,-33,-34,-35,-36,-37,]),'CKEY':([11,15,16,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,80,81,82,85,92,93,94,106,107,108,109,110,111,112,],[-6,-10,-11,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-38,-39,-40,-26,-27,-28,-29,-30,-31,95,96,97,99,-41,-42,-43,-30,-32,-33,-34,-35,-36,-37,]),'CPRT':([14,15,16,20,21,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,77,78,79,92,93,94,100,101,102,103,104,105,107,108,109,110,111,112,],[22,-10,-11,44,45,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-38,-39,-40,-26,-27,-28,-29,-30,-31,92,93,94,-41,-42,-43,107,108,109,110,111,112,-32,-33,-34,-35,-36,-37,]),'ADD':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[23,-10,-11,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-26,-27,-28,-29,-30,-31,23,23,23,23,23,23,-41,-42,-43,23,23,23,23,23,23,-30,-32,-33,-34,-35,-36,-37,]),'SUBST':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[24,-10,-11,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,-27,-28,-29,-30,-31,24,24,24,24,24,24,-41,-42,-43,24,24,24,24,24,24,-30,-32,-33,-34,-35,-36,-37,]),'MULT':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[25,-10,-11,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-26,-27,-28,-29,-30,-31,25,25,25,25,25,25,-41,-42,-43,25,25,25,25,25,25,-30,-32,-33,-34,-35,-36,-37,]),'DIV':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[26,-10,-11,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,-27,-28,-29,-30,-31,26,26,26,26,26,26,-41,-42,-43,26,26,26,26,26,26,-30,-32,-33,-34,-35,-36,-37,]),'SML':([14,15,16,17,20,21,42,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,83,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[27,-10,-11,36,27,27,27,71,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,-27,-28,-29,-30,-31,27,27,27,27,27,36,27,-41,-42,-43,27,27,27,27,27,27,36,-32,-33,-34,-35,-36,-37,]),'GRT':([14,15,16,17,20,21,42,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,83,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[28,-10,-11,37,28,28,28,72,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,-27,-28,-29,-30,-31,28,28,28,28,28,37,28,-41,-42,-43,28,28,28,28,28,28,37,-32,-33,-34,-35,-36,-37,]),'SMLE':([14,15,16,17,20,21,42,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,83,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[29,-10,-11,38,29,29,29,73,29,29,29,29,29,29,29,29,29,29,29,29,29,-26,-27,-28,-29,-30,-31,29,29,29,29,29,38,29,-41,-42,-43,29,29,29,29,29,29,38,-32,-33,-34,-35,-36,-37,]),'GRTE':([14,15,16,17,20,21,42,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,83,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[30,-10,-11,39,30,30,30,74,30,30,30,30,30,30,30,30,30,30,30,30,30,-26,-27,-28,-29,-30,-31,30,30,30,30,30,39,30,-41,-42,-43,30,30,30,30,30,30,39,-32,-33,-34,-35,-36,-37,]),'DIF':([14,15,16,17,20,21,42,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,83,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[32,-10,-11,41,32,32,32,76,32,32,32,32,32,32,32,32,32,32,32,32,32,-26,-27,-28,-29,-30,-31,32,32,32,32,32,41,32,-41,-42,-43,32,32,32,32,32,32,41,-32,-33,-34,-35,-36,-37,]),'AND':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[33,-10,-11,33,46,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-26,-27,-28,-29,-30,-31,33,33,33,33,33,33,-41,-42,-43,33,33,33,33,33,33,-30,-32,-33,-34,-35,-36,-37,]),'OR':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[34,-10,-11,34,47,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-26,-27,-28,-29,-30,-31,34,34,34,34,34,34,-41,-42,-43,34,34,34,34,34,34,-30,-32,-33,-34,-35,-36,-37,]),'NOT':([14,15,16,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,92,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,],[35,-10,-11,35,48,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-26,-27,-28,-29,-30,-31,35,35,35,35,35,35,-41,-42,-43,35,35,35,35,35,35,-30,-32,-33,-34,-35,-36,-37,]),'OKEY':([22,44,],[49,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,],[2,]),'declaracion':([0,49,],[3,81,]),'While':([0,],[4,]),'condicional':([0,],[5,]),'empty':([0,49,],[6,82,]),'asignacion':([0,49,],[7,7,]),'expresion':([9,12,13,18,23,24,25,26,27,28,29,30,31,32,33,34,35,43,46,47,48,49,70,86,87,88,89,90,91,98,],[14,20,21,42,50,51,52,53,54,55,56,57,58,59,60,61,62,69,77,78,79,80,85,100,101,102,103,104,105,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','analizadorSintactico.py',43),
  ('block -> declaracion','block',1,'p_block','analizadorSintactico.py',47),
  ('block -> While','block',1,'p_block','analizadorSintactico.py',48),
  ('block -> condicional','block',1,'p_block','analizadorSintactico.py',49),
  ('declaracion -> empty','declaracion',1,'p_declaracionEmpty','analizadorSintactico.py',53),
  ('declaracion -> asignacion ENDST','declaracion',2,'p_declaracion','analizadorSintactico.py',57),
  ('asignacion -> IDF EQL expresion','asignacion',3,'p_asignacion1','analizadorSintactico.py',61),
  ('asignacion -> asignacion ENDST IDF EQL expresion ENDST','asignacion',6,'p_asignacion2','analizadorSintactico.py',67),
  ('While -> WHL OPRT expresion CPRT OKEY expresion CKEY','While',7,'p_bucle','analizadorSintactico.py',72),
  ('expresion -> INT','expresion',1,'p_expresion_numero','analizadorSintactico.py',77),
  ('expresion -> CHR','expresion',1,'p_expresion_Caracter','analizadorSintactico.py',82),
  ('condicional -> OPRT expresion CPRT OKEY expresion CKEY','condicional',6,'p_condicional','analizadorSintactico.py',87),
  ('condicional -> OPRT expresion CPRT OKEY declaracion CKEY','condicional',6,'p_condicionalExpresion','analizadorSintactico.py',92),
  ('condicional -> OPRT expresion CPRT OKEY empty CKEY','condicional',6,'p_condicionalVacio','analizadorSintactico.py',97),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',107),
  ('expresion -> expresion ADD expresion','expresion',3,'p_expresion_operaciones','analizadorSintactico.py',113),
  ('expresion -> expresion SUBST expresion','expresion',3,'p_expresion_operaciones','analizadorSintactico.py',114),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_operaciones','analizadorSintactico.py',115),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_operaciones','analizadorSintactico.py',116),
  ('expresion -> expresion SML expresion','expresion',3,'p_expresion_logicas','analizadorSintactico.py',139),
  ('expresion -> expresion GRT expresion','expresion',3,'p_expresion_logicas','analizadorSintactico.py',140),
  ('expresion -> expresion SMLE expresion','expresion',3,'p_expresion_logicas','analizadorSintactico.py',141),
  ('expresion -> expresion GRTE expresion','expresion',3,'p_expresion_logicas','analizadorSintactico.py',142),
  ('expresion -> expresion EQL expresion','expresion',3,'p_expresion_logicas','analizadorSintactico.py',143),
  ('expresion -> expresion DIF expresion','expresion',3,'p_expresion_logicas','analizadorSintactico.py',144),
  ('expresion -> IDF SML IDF','expresion',3,'p_expresion_logicas','analizadorSintactico.py',145),
  ('expresion -> IDF GRT IDF','expresion',3,'p_expresion_logicas','analizadorSintactico.py',146),
  ('expresion -> IDF SMLE IDF','expresion',3,'p_expresion_logicas','analizadorSintactico.py',147),
  ('expresion -> IDF GRTE IDF','expresion',3,'p_expresion_logicas','analizadorSintactico.py',148),
  ('expresion -> IDF EQL IDF','expresion',3,'p_expresion_logicas','analizadorSintactico.py',149),
  ('expresion -> IDF DIF IDF','expresion',3,'p_expresion_logicas','analizadorSintactico.py',150),
  ('expresion -> OPRT expresion CPRT SML OPRT expresion CPRT','expresion',7,'p_expresion_logicas','analizadorSintactico.py',151),
  ('expresion -> OPRT expresion CPRT GRT OPRT expresion CPRT','expresion',7,'p_expresion_logicas','analizadorSintactico.py',152),
  ('expresion -> OPRT expresion CPRT SMLE OPRT expresion CPRT','expresion',7,'p_expresion_logicas','analizadorSintactico.py',153),
  ('expresion -> OPRT expresion CPRT GRTE OPRT expresion CPRT','expresion',7,'p_expresion_logicas','analizadorSintactico.py',154),
  ('expresion -> OPRT expresion CPRT EQL OPRT expresion CPRT','expresion',7,'p_expresion_logicas','analizadorSintactico.py',155),
  ('expresion -> OPRT expresion CPRT DIF OPRT expresion CPRT','expresion',7,'p_expresion_logicas','analizadorSintactico.py',156),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_booleana','analizadorSintactico.py',189),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_booleana','analizadorSintactico.py',190),
  ('expresion -> expresion NOT expresion','expresion',3,'p_expresion_booleana','analizadorSintactico.py',191),
  ('expresion -> OPRT expresion AND expresion CPRT','expresion',5,'p_expresion_booleana','analizadorSintactico.py',192),
  ('expresion -> OPRT expresion OR expresion CPRT','expresion',5,'p_expresion_booleana','analizadorSintactico.py',193),
  ('expresion -> OPRT expresion NOT expresion CPRT','expresion',5,'p_expresion_booleana','analizadorSintactico.py',194),
]
